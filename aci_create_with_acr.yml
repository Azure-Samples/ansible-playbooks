# Description
# ===========
# This plabyook build a docker image, then push to azure container registry, 
# then provision an azure container instance with that image.
# 1. clone a sample helloworld app
# 1. create azure container registery
# 1. build docker image from helloworld app, and push image to azure container azure container registry
# 1. create azure container instance with the image in azure container registry
#
# Prequisite
# ===========
# - git
# - Docker
- hosts: localhost
  tasks:
    - name: Prepare random postfix
      set_fact:
        rpfx: "{{ 1000 | random }}"
      run_once: yes


- name: demo
  hosts: localhost
# The modules of azure container registry and azure container instance are available since Ansible version 2.5.
# But if you are using Ansible version 2.4, you need to have below 2 lines to get modules of azure container registry and azure container instance from the playbook role of azure_preview_modules.
#  roles:
#    - azure.azure_preview_modules
  vars:
    resource_group: "{{ resource_group_name }}{{ rpfx }}"
    location: eastus
    registry_name: acr{{ rpfx }}
    repo_url: "https://github.com/Azure-Samples/aci-helloworld.git"
    workspace: ~/src/aci-helloworld
    image_name: aci-helloworld
    http_port: 80
    email: test@email.com
  tasks:
    - name: Git Clone
      git:
        repo: "{{ repo_url }}"
        dest: "{{ workspace }}"
    - name: Create a resource group
      azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        location: "{{ location }}"
    - name: Create Azure Container Registry
      azure_rm_containerregistry:
        resource_group: "{{ resource_group }}"
        name: "{{ registry_name}}"
        admin_user_enabled: True
        sku: Standard
      register: acr_result
    - name: Login docker registry
      docker_login:
        registry: "{{ registry_name }}.azurecr.io"
        username: "{{ registry_name }}"
        password: "{{ acr_result.credentials.password }}"
        email: "{{ email }}"
    - name: Docker Build and Push
      docker_image:
        path: "{{ workspace }}"
        name: "{{ registry_name }}.azurecr.io/{{ image_name }}"
        push: yes
    - name: Create Azure Container Instance
      azure_rm_containerinstance:
        resource_group: "{{ resource_group }}"
        name: "{{ image_name }}"
        ip_address: public
        ports:
          - "{{ http_port }}"
        registry_login_server: "{{ registry_name }}.azurecr.io"
        registry_username: "{{ registry_name }}"
        registry_password: "{{ acr_result.credentials.password }}"
        containers:
          - name: "{{ image_name }}"
            ports:
              - "{{ http_port }}"
            image: "{{ registry_name }}.azurecr.io/{{ image_name }}"
