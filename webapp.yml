# Description
# ===========
# This playbook creates an Azure Linux Web app with Java container Tomcat 8.5,
# then build a Java hello world app, ftp the war file to the Web app.
# Please note, it's recommended to use CI/CD tool to do webapp deployment, such as Jenkins.
# Deployment step in this sample is just to validate webapp created is working.
#
# Dependencies
# ============
# git
# maven
- hosts: localhost
  connection: local
  vars:
    app_name: testapp-yungez
    location: eastus
    linux_plan_name: testplan-yungez
    repo_url: https://github.com/yungezz/helloworld.git
    workspace: /helloworld

  roles:
    - Azure.azure_preview_modules
  
  tasks:
  - name: Create resource group
    azure_rm_resourcegroup:
        name: "{{ resource_group_name }}"
        location: "{{ location }}"

  - name: Create secondary resource group
    azure_rm_resourcegroup:
        name: "{{ resource_group_name }}2nd"
        location: "{{ location }}"

  - name: Create a Linux web app with Java framework and Tomcat
    azure_rm_webapp:
        resource_group: "{{ resource_group_name }}"
        name: "{{ app_name }}"
        plan:
          resource_group: "{{ resource_group_name }}2nd"
          name: "{{ linux_plan_name }}"
          is_linux: true
          sku: S1
          number_of_workers: 1
        app_settings:
          testkey: "testvalue"
        frameworks:
          - name: java
            version: 8
            settings:
              java_container: "Tomcat"
              java_container_version: "8.5"
  
  - name: Get web app facts
    azure_rm_webapp_facts:
      resource_group: "{{ resource_group_name }}"
      name: "{{ app_name }}"
      return_publish_profile: true
    no_log: true
    register: webapp

  - name: Git clone sample app
    git:
      repo: "{{ repo_url }}"
      dest: "{{ workspace }}"
  
  - name: Build sample app
    shell: mvn package chdir="{{ workspace }}"
  
  - name: Deploy sample app to web app via FTP
    shell: curl -T "{{ workspace }}/target/demo-0.0.1-SNAPSHOT.war" {{ webapp.webapps[0].ftp_publish_url }}/webapps/hello.war --user '{{ webapp.webapps[0].publishing_username }}:{{ webapp.webapps[0].publishing_password }}'

  - name: Restart the web app
    azure_rm_webapp:
      resource_group: "{{ resource_group_name }}"
      name: "{{ app_name }}"
      app_state: restarted

  - name: Dump webapp information
    debug:
      var: webapp